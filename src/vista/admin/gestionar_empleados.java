/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.admin;

import java.awt.Dimension;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Empleados;
import persistencia.EmpleadosJpaController;

/**
 *
 * @author reyes
 */
public class gestionar_empleados extends javax.swing.JFrame {

    EmpleadosJpaController cEmpleados = new EmpleadosJpaController();
    Empleados cEdit;
    
    java.util.Date fecha = new Date();
    String strDateFormat = "dd/MM/y";
    SimpleDateFormat objSDF = new SimpleDateFormat(strDateFormat);
    //System.out.println(objSDF.format(fecha));
    String fechaHoy = objSDF.format(fecha);
    
    /**
     * Creates new form gestionar_empleados
     */
    public gestionar_empleados() {
        initComponents();
        this.setMinimumSize(new Dimension(1400, 650));
        this.setLocationRelativeTo(null);
        CrearModelo();
        Cargar_Informacion();
    }
    
    public static String darFormato(Date date) {
        if(date == null){
            return null;
        }else {
            SimpleDateFormat simpleDateFormat = new SimpleDateFormat("dd/MM/yyyy");
            return simpleDateFormat.format(date).toUpperCase();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        btnSelect = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        txtDni = new javax.swing.JTextField();
        txtApellido = new javax.swing.JTextField();
        comboGenero = new javax.swing.JComboBox<>();
        txtSalario = new javax.swing.JTextField();
        comboCargo = new javax.swing.JComboBox<>();
        txtNombre = new javax.swing.JTextField();
        dateNac = new com.toedter.calendar.JDateChooser();
        dateCon = new com.toedter.calendar.JDateChooser();
        dateDes = new com.toedter.calendar.JDateChooser();
        btnActualizar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tabla.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tabla);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(615, 30, 740, 500));

        btnSelect.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vista/img/bSeleccionar.png"))); // NOI18N
        btnSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectActionPerformed(evt);
            }
        });
        getContentPane().add(btnSelect, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 570, 200, 50));

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vista/img/bGuardar.png"))); // NOI18N
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        getContentPane().add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 570, 200, 50));
        getContentPane().add(txtDni, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 90, 210, 30));
        getContentPane().add(txtApellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 190, 210, 30));

        comboGenero.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "M", "F" }));
        getContentPane().add(comboGenero, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 240, 210, 30));
        getContentPane().add(txtSalario, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 390, 210, 30));

        comboCargo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "admin", "seller", "worker", "courier" }));
        comboCargo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        getContentPane().add(comboCargo, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 440, 210, 30));
        getContentPane().add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 130, 210, 36));
        getContentPane().add(dateNac, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 290, 210, 30));
        getContentPane().add(dateCon, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 330, 210, 36));
        getContentPane().add(dateDes, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 490, 210, 32));

        btnActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vista/img/bActualizar.png"))); // NOI18N
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });
        getContentPane().add(btnActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 570, 200, 50));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vista/img/Gestionar_Empleados.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1400, 650));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        int resp = JOptionPane.showConfirmDialog(this, "Esta seguro de realizar la operacion?", "Confirmacion",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (resp == JOptionPane.YES_OPTION) {
            try {
                Empleados c = new Empleados();

                c.setEmpDni(Integer.parseInt(txtDni.getText()));
                c.setEmpNombre(txtNombre.getText());
                c.setEmpApellido(txtApellido.getText());

                String generoS = (String) comboGenero.getSelectedItem();
                char genero = generoS.charAt(0);
                c.setEmpGenero(genero);

              //  Date date1=new SimpleDateFormat("dd/MM/yyyy").parse(txtFN.getText()); 
                c.setEmpFechaNacimiento(dateNac.getDate());

              //  Date date2=new SimpleDateFormat("dd/MM/yyyy").parse(txtFC.getText()); 
                c.setEmpFechaContratacion(dateCon.getDate());

                c.setEmpSalario(Integer.parseInt(txtSalario.getText()));
                c.setEmpCargo((String) comboCargo.getSelectedItem());

              //  Date date3=new SimpleDateFormat("dd/MM/yyyy").parse(txtFD.getText()); 
                c.setEmpFechaDespido(null);           

                cEmpleados.create(c);
                System.out.println("Los datos fueron guardados");

                CrearModelo();
                Cargar_Informacion();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e.getMessage());
                System.out.println("Problema el guardar datos");
            }
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        int resp = JOptionPane.showConfirmDialog(this, "Esta seguro de realizar la operacion?", "Confirmacion",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (resp == JOptionPane.YES_OPTION) {
            try{
                cEdit.setEmpNombre(txtNombre.getText());
                cEdit.setEmpApellido(txtApellido.getText());

                String generoS = (String) comboGenero.getSelectedItem();
                char genero = generoS.charAt(0);
                cEdit.setEmpGenero(genero);

                cEdit.setEmpFechaNacimiento(dateNac.getDate());
                cEdit.setEmpFechaContratacion(dateCon.getDate());           
                cEdit.setEmpSalario(Integer.parseInt(txtSalario.getText()));           
                cEdit.setEmpCargo((String) comboCargo.getSelectedItem());
                cEdit.setEmpFechaDespido(dateDes.getDate());           

                cEmpleados.edit(cEdit);
                System.out.println("Se actualizo");
                CrearModelo();
                Cargar_Informacion();
            }catch (Exception e){
                JOptionPane.showMessageDialog(null, e.toString() + "error");
                System.out.println("Error al actualizar");
            }   
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectActionPerformed
        txtDni.setText(tabla.getValueAt(tabla.getSelectedRow(), 0).toString());
        txtNombre.setText(tabla.getValueAt(tabla.getSelectedRow(), 1).toString());
        txtApellido.setText(tabla.getValueAt(tabla.getSelectedRow(), 2).toString());
        comboGenero.setSelectedItem(tabla.getValueAt(tabla.getSelectedRow(), 3).toString());
        dateNac.setDate(cEmpleados.findEmpleados((Integer) modelo.getValueAt(tabla.getSelectedRow(), 0)).getEmpFechaNacimiento());
        dateCon.setDate(cEmpleados.findEmpleados((Integer) modelo.getValueAt(tabla.getSelectedRow(), 0)).getEmpFechaContratacion());
        txtSalario.setText(tabla.getValueAt(tabla.getSelectedRow(), 6).toString());
        comboCargo.setSelectedItem(tabla.getValueAt(tabla.getSelectedRow(), 7).toString());
        dateDes.setDate(cEmpleados.findEmpleados((Integer) modelo.getValueAt(tabla.getSelectedRow(), 0)).getEmpFechaDespido());
        
        cEdit = cEmpleados.findEmpleados((Integer) modelo.getValueAt(tabla.getSelectedRow(), 0));
    }//GEN-LAST:event_btnSelectActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(gestionar_empleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(gestionar_empleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(gestionar_empleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(gestionar_empleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new gestionar_empleados().setVisible(true);
            }
        });
    }
    
    DefaultTableModel modelo;
    private void CrearModelo() {
        try {
            modelo = (new DefaultTableModel(
                    null, new String[]{
                        "Dni", "Nombres", "Apellidos",
                        "Genero", "F. Nacimiento", "F. Contratacion",
                        "Salario", "Cargo", "F. Despido"}) {
                Class[] types = new Class[]{
                    java.lang.String.class,
                    java.lang.String.class,
                    java.lang.String.class,
                    java.lang.String.class,
                    java.lang.String.class,
                    java.lang.String.class,
                    java.lang.String.class,
                    java.lang.String.class,
                    java.lang.String.class
                };
                boolean[] canEdit = new boolean[]{
                    false, false, false, false, false, false, false, false, false
                };

                @Override
                public Class getColumnClass(int columnIndex) {
                    return types[columnIndex];
                }

                @Override
                public boolean isCellEditable(int rowIndex, int colIndex) {
                    return canEdit[colIndex];
                }
            });
            tabla.setModel(modelo);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.toString() + "error");
            System.out.println("Problema con el modelo de tabla");
        }
    }
    
    
    private void Cargar_Informacion(){
        try{
            Object o[]=null;
            List<Empleados> listE = cEmpleados.findEmpleadosEntities();
            
            for (int i=0; i< listE.size(); i++){
                modelo.addRow(o);
                modelo.setValueAt(listE.get(i).getEmpDni(), i, 0);
                modelo.setValueAt(listE.get(i).getEmpNombre(), i, 1);
                modelo.setValueAt(listE.get(i).getEmpApellido(), i, 2);
                modelo.setValueAt(listE.get(i).getEmpGenero(), i, 3);
                modelo.setValueAt(darFormato(listE.get(i).getEmpFechaNacimiento()), i, 4);
                modelo.setValueAt(darFormato(listE.get(i).getEmpFechaContratacion()), i, 5);
                modelo.setValueAt(listE.get(i).getEmpSalario(), i, 6);
                modelo.setValueAt(listE.get(i).getEmpCargo(), i, 7);
                modelo.setValueAt(darFormato(listE.get(i).getEmpFechaDespido()), i, 8);
                
            }                                            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage());
            System.out.println("problema al cargar datos");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnSelect;
    private javax.swing.JComboBox<String> comboCargo;
    private javax.swing.JComboBox<String> comboGenero;
    private com.toedter.calendar.JDateChooser dateCon;
    private com.toedter.calendar.JDateChooser dateDes;
    private com.toedter.calendar.JDateChooser dateNac;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtDni;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtSalario;
    // End of variables declaration//GEN-END:variables
}
